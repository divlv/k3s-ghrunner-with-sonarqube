# sonarqube.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
  labels: { app: sonarqube }
spec:
  replicas: 1
  selector:
    matchLabels: { app: sonarqube }
  template:
    metadata:
      labels: { app: sonarqube }
    spec:
      initContainers: # sysctl for ES-inside SonarQube
        - name: init-sysctl
          image: busybox:1.36
          command: ["sh", "-c", "sysctl -w vm.max_map_count=262144"]
          securityContext: { privileged: true }
      securityContext: { fsGroup: 1000 }
      containers:
        - name: sonarqube
          image: sonarqube:25.5.0.107428-community # Latest Community
          env:
            - name: SONAR_JDBC_URL
              value: jdbc:postgresql://postgresql.sonarqube.svc.cluster.local:5432/sonarqube
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                {
                  secretKeyRef:
                    { name: sonar-secrets, key: SONAR_JDBC_USERNAME },
                }
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                {
                  secretKeyRef:
                    { name: sonar-secrets, key: SONAR_JDBC_PASSWORD },
                }
            - name: SONAR_ES_BOOTSTRAP_CHECKS_DISABLE
              value: "true"
          ports: [{ containerPort: 9000 }]
          volumeMounts:
            - name: sonar-data
              mountPath: /opt/sonarqube/data
      volumes:
        - name: sonar-data
          persistentVolumeClaim:
            claimName: sonar-data
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  selector: { app: sonarqube }
  ports:
    - port: 9000
      targetPort: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarqube-ingress
  namespace: sonarqube
  annotations:
    spec.ingressClassName: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: default
spec:
  rules:
    - host: ghr.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarqube
                port:
                  number: 9000
  tls:
    - hosts: [ghr.example.com]
